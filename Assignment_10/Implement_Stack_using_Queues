package Assignment_10;
import java.util.*;
class MyStack{  //using one queue
    private Queue<Integer> q1;
    public MyStack(){
        q1=new LinkedList<>();
    }
    public void push(int val){
        q1.offer(val);
        for (int i = 0; i < q1.size()-1; i++) {
            q1.offer(q1.poll());
        }
    }
    public int pop(){
        return q1.poll();
    }
    public int top(){
        return q1.peek();
    }
    public boolean Empty(){
        return q1.isEmpty();
    }
}

public class Implement_Stack_using_Queues {
    public static void main(String[] args) {
        MyStack obj=new MyStack();
        obj.push(20);
        obj.push(5);
        System.out.println(obj.pop());
        obj.push(10);
        System.out.println(obj.top());
        System.out.println(obj.Empty());
    }
}
//5
//10
//false

//push()	O(N)	Reordering all previous elements
//pop()	O(1)	Single dequeue operation
//top()	O(1)	Single peek
//isEmpty()	O(1)	Queue method
//Space	O(N)	One queue storing all elements